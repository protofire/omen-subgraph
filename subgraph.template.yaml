specVersion: 0.0.2
description: Omen
repository: https://github.com/protofire/omen-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Realitio
    network: {{network}}
    source:
      address: '{{Realitio.address}}'
      abi: Realitio
      startBlock: {{Realitio.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Question
        - Category
        - FixedProductMarketMaker
      abis:
        - name: Realitio
          file: ./abis/Realitio.json
      eventHandlers:
        - event: LogNewQuestion(indexed bytes32,indexed address,uint256,string,indexed bytes32,address,uint32,uint32,uint256,uint256)
          handler: handleNewQuestion
        - event: LogNewAnswer(bytes32,indexed bytes32,bytes32,indexed address,uint256,uint256,bool)
          handler: handleNewAnswer
        - event: LogAnswerReveal(indexed bytes32,indexed address,indexed bytes32,bytes32,uint256,uint256)
          handler: handleAnswerReveal
        - event: LogNotifyOfArbitrationRequest(indexed bytes32,indexed address)
          handler: handleArbitrationRequest
        - event: LogFinalize(indexed bytes32,indexed bytes32)
          handler: handleFinalize
      file: ./src/RealitioMapping.ts
  - kind: ethereum/contract
    name: RealitioScalarAdapter
    network: {{network}}
    source:
      address: '{{RealitioScalarAdapter.address}}'
      abi: RealitioScalarAdapter
      startBlock: {{RealitioScalarAdapter.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - ScalarQuestionLink
      abis:
        - name: RealitioScalarAdapter
          file: ./abis/RealitioScalarAdapter.json
      eventHandlers:
        - event: QuestionIdAnnouncement(indexed bytes32,indexed bytes32,uint256,uint256)
          handler: handleScalarQuestionIdAnnouncement
      file: ./src/RealitioMapping.ts
  - kind: ethereum/contract
    name: ConditionalTokens
    network: {{network}}
    source:
      address: '{{ConditionalTokens.address}}'
      abi: ConditionalTokens
      startBlock: {{ConditionalTokens.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Condition
        - Question
        - Category
        - FixedProductMarketMaker
        - Global
      abis:
        - name: ConditionalTokens
          file: ./abis/ConditionalTokens.json
      eventHandlers:
        - event: ConditionPreparation(indexed bytes32,indexed address,indexed bytes32,uint256)
          handler: handleConditionPreparation
        - event: ConditionResolution(indexed bytes32,indexed address,indexed bytes32,uint256,uint256[])
          handler: handleConditionResolution
      file: ./src/ConditionalTokensMapping.ts
{{#DXTokenRegistry.address}}
  - kind: ethereum/contract
    name: DXTokenRegistry
    network: {{network}}
    source:
      address: '{{DXTokenRegistry.address}}'
      abi: DXTokenRegistry
      startBlock: {{DXTokenRegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
        - RegisteredToken
        - TokenList
      abis:
        - name: DXTokenRegistry
          file: ./abis/DXTokenRegistry.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: AddList(uint256,string)
          handler: handleAddList
        - event: AddToken(uint256,address)
          handler: handleAddToken
        - event: RemoveToken(uint256,address)
          handler: handleRemoveToken
      file: ./src/DXTokenRegistryMapping.ts
{{/DXTokenRegistry.address}}
  - kind: ethereum/contract
    name: FPMMDeterministicFactory
    network: {{network}}
    source:
      address: '{{FPMMDeterministicFactory.address}}'
      abi: FPMMDeterministicFactory
      startBlock: {{FPMMDeterministicFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
        - Condition
        - Question
        - Token
        - Global
      abis:
        - name: FPMMDeterministicFactory
          file: ./abis/FPMMDeterministicFactory.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: FixedProductMarketMakerCreation(indexed address,address,address,address,bytes32[],uint256)
          handler: handleFixedProductMarketMakerCreation
      file: ./src/FPMMDeterministicFactoryMapping.ts
  - kind: ethereum/contract
    name: FPMMDeterministicFactoryV2
    network: {{network}}
    source:
      address: '{{FPMMDeterministicFactoryV2.address}}'
      abi: FPMMDeterministicFactory
      startBlock: {{FPMMDeterministicFactoryV2.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
        - Condition
        - Question
        - Token
        - Global
      abis:
        - name: FPMMDeterministicFactory
          file: ./abis/FPMMDeterministicFactoryV2.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: FixedProductMarketMakerCreation(indexed address,address,address,address,bytes32[],uint256)
          handler: handleFixedProductMarketMakerCreation
      file: ./src/FPMMDeterministicFactoryMapping.ts
{{#GeneralizedTCR.address}}
  - kind: ethereum/contract
    name: GeneralizedTCR
    network: {{network}}
    source:
      address: '{{GeneralizedTCR.address}}'
      abi: GeneralizedTCR
      startBlock: {{GeneralizedTCR.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
      abis:
        - name: GeneralizedTCR
          file: ./abis/GeneralizedTCR.json
      eventHandlers:
        - event: ItemStatusChange(indexed bytes32,indexed uint256,indexed uint256,bool,bool)
          handler: handleItemStatusChange
      file: ./src/GeneralizedTCRMapping.ts
{{/GeneralizedTCR.address}}
{{#StakingRewardsFactory.address}}
  - kind: ethereum/contract
    name: StakingRewardsFactory
    network: {{network}}
    source:
      address: '{{StakingRewardsFactory.address}}'
      abi: StakingRewardsFactory
      startBlock: {{StakingRewardsFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Distribution
      abis:
        - name: StakingRewardsFactory
          file: ./abis/StakingRewardsFactory.json
      eventHandlers:
        - event: DistributionCreated(address,address)
          handler: handleDistributionCreation
      file: ./src/StakingRewardsFactoryMapping.ts
{{/StakingRewardsFactory.address}}
  - kind: ethereum/contract
    name: UniswapV2Factory
    network: {{network}}
    source:
      address: '{{UniswapV2Factory.address}}'
      abi: UniswapV2Factory
      startBlock: {{UniswapV2Factory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - UniswapPair
        - Token
        - Global
      abis:
        - name: UniswapV2Factory
          file: ./abis/UniswapV2Factory.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: PairCreated(indexed address,indexed address,address,uint256)
          handler: handleNewPair
      file: ./src/UniswapV2FactoryMapping.ts
  - kind: ethereum/contract
    name: SwaprFactory
    network: {{network}}
    source:
      address: '{{SwaprFactory.address}}'
      abi: SwaprFactory
      startBlock: {{SwaprFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - UniswapPair
        - Token
        - Global
      abis:
        - name: SwaprFactory
          file: ./abis/SwaprFactory.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: PairCreated(indexed address,indexed address,address,uint256)
          handler: handleNewPair
      file: ./src/UniswapV2FactoryMapping.ts
templates:
  - name: FixedProductMarketMaker
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: FixedProductMarketMaker
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - FixedProductMarketMaker
        - Account
        - FpmmPoolMembership
        - FpmmParticipation
        - Token
        - Global
      abis:
        - name: FixedProductMarketMaker
          file: ./abis/FixedProductMarketMaker.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: FPMMFundingAdded(indexed address,uint256[],uint256)
          handler: handleFundingAdded
        - event: FPMMFundingRemoved(indexed address,uint256[],uint256,uint256)
          handler: handleFundingRemoved
        - event: FPMMBuy(indexed address,uint256,uint256,indexed uint256,uint256)
          handler: handleBuy
        - event: FPMMSell(indexed address,uint256,uint256,indexed uint256,uint256)
          handler: handleSell
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handlePoolShareTransfer
      file: ./src/FixedProductMarketMakerMapping.ts
  - name: UniswapV2Pair
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: UniswapV2Pair
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - UniswapPair
        - Token
        - Global
      abis:
        - name: UniswapV2Factory
          file: ./abis/UniswapV2Factory.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: Sync(uint112,uint112)
          handler: handleSync
      file: ./src/UniswapV2PairMapping.ts
  - name: ERC20Detailed
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ERC20Detailed
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities: []
      abis:
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      file: ./src/utils/empty.ts
  - kind: ethereum/contract
    name: Distribution
    network: {{network}}
    source:
      abi: StakingRewardsDistribution
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/StakingRewardsDistributionMapping.ts
      entities:
        - LMDeposit
        - LMWithdrawal
        - LMClaim
        - LMRecovery
      abis:
        - name: StakingRewardsDistribution
          file: ./abis/StakingRewardsDistribution.json
        - name: ERC20Detailed
          file: ./abis/ERC20Detailed.json
      eventHandlers:
        - event: Initialized(address[],address,uint256[],uint64,uint64,bool,uint256)
          handler: handleDistributionInitialization
        - event: Canceled()
          handler: handleCancelation
        - event: Staked(indexed address,uint256)
          handler: handleDeposit
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawal
        - event: Claimed(indexed address,uint256[])
          handler: handleClaim
        - event: Recovered(uint256[])
          handler: handleRecovery
        - event: UpdatedRewards(uint256[])
          handler: handleUpdatedRewards
